# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from LogRetrieve import LogRetrieve

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(140, 200, 89, 25))
        self.pushButton.setObjectName("pushButton")
        self.comboBox = QtWidgets.QComboBox(Dialog)
        self.comboBox.setGeometry(QtCore.QRect(50, 80, 86, 25))
        self.comboBox.setObjectName("comboBox")
        self.comboBox_2 = QtWidgets.QComboBox(Dialog)
        self.comboBox_2.setGeometry(QtCore.QRect(210, 80, 86, 25))
        self.comboBox_2.setObjectName("comboBox_2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # geek list
        geek_list = ["1", "2", "4", "6"]
  
        # adding list of items to combo box
        self.comboBox.addItems(geek_list)
          # adding action to comboBox
        self.comboBox.currentIndexChanged.connect(self.find)
  

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "PushButton"))

    def find(self):
        self.comboBox_2.clear()

        # finding the content of current item in combo box
        content = self.comboBox.currentText()
  
        # showing content on the screen though label
        print("Content : " + content)
        myfunc = lr.test(content)
        self.comboBox_2.addItems(myfunc)
        self.pushButton.setEnabled(True)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()

    lr = LogRetrieve()
    ui.setupUi(Dialog)
    ui.pushButton.setEnabled(False)

    Dialog.show()
    sys.exit(app.exec_())
  


class LogRetrieve:

    maindir = os.getcwd()
    today = datetime.today().strftime('%Y%m%d%H%M%S')
    temp = tempfile.TemporaryDirectory(dir=maindir)


    def test(self, content):
        print("weee", content)
        with open("m.json") as jsondata:
            data = json.load(jsondata)
            fil = data["filiali"]
        filiale = content
        numerofiliale = content
        filiale = fil[filiale]
        titolofiliale = filiale["title"]
        print("[+]\nFiliale numero: ", numerofiliale, "\nTitolo: ", titolofiliale)
        # numerocassa = input("\n[+] Numero della cassa: \n")
        casse = []
        for val in range(len(filiale["cassa"])):
            casse += ["cassa" + str(val+1)]
        return(casse)



